# Store the two given strings
s = "ACGTTAAGGCTCGGCTTGGAGTGTAATAACCAGGAATCGCTGTAGCACTGGAAGTACTTTTCACTCTTATTACGCCGATATTTGATATACCCCCTTCAGCAATATGTGCCTTTCATCAGCTCCCACTCCATCAGTGCCATCTCGGGATACGAGCAAGCGCCGTTGAGAACAACGTACACCAGGCGGACTATACAATTCGCATAAATTATGACATACAAACTTGCCAGGGTAGATCAACTTTGCACAGAGTTTCCGAAAGTAACTGTCCTAGAATGCATTCGCAGCTGCTCTTTTGTGCTGGCGGACGATCCCTTCCTCAATCGGGGGCGGAGACTATTCCCGCTGCGAACTATAAATACTGACCTTTGTCTTCGGATCCCTTGATGCGAAGTTGTGTACGATGTCGTCAGAGCATGTTCAACGTGAGGTTCAAATCTCAACTATACCTACCATAAAGCTGCGCGTGGGACAGAGTTTCTGGCAGGATTACCGGAAAAGGCCGCTTACAGGTTTACTCAGTTAGATAAACAAATCATATTAGTCATTCGAAATGTGTACTAACGTCTTGGAGTGTGGACAAACTCAAAATACGCGCTTTGGATAAAGACCCATAAACGTACCAGAATCAATTCGTGTAGGTACTACCGCAGCCTTTTCCGTAAAACTCAGCCCGGTGTTTTTCATATATGCGAACGCCCGTGCATACTAACTAGTTCGTTACTAAAGCTCGACCGTGGGGCGACTCCTCACGCGGGCTTGCTATTTACACGCAGCAATCTACCCGCAAACCTACCACAGTTGCTCTATCGACCCGCATTCTACGTTTTTCTGAACTCCGGTCCGGGGAGGGGAGCGTAGCGGCAGACTTTCGCTGACCATCTCCCATAGCAACAACTATTGCGAACTCGATCGGATAAGGAAAGCCAGCGCACTG"
t = "GCCTTAATGGTGGCCCAAGGGTTTTATAACCTGACATCTGCGCATCTGTCGCACTGCTTATCCCTGTAGTGGGTCCAATGTAAGCTCCGCTACGGTATGTTTCCCGTGGATCTCATGAAATCGCAATCGTAAAGACGCTTCGCGCAAGCCAAAACCGCTTGGCGGAGGCCAGTGCTCAGAACCCGAAGGATATTATTCGCAAAACTTCTCACAAACTAGCGTATCGAGGTTGATCTATAGTGTTTGCCGCCGCCGGATGTACCAGACATAGGCGAATTTCCGATTACCTCCCTCCTGCGGACTATCGATCTCTGCGTCATGGAACACCATAAATGCATGGTAATGTGTACGAGTGCTACATTAGTACTGATCCGGCCGAGAAGTTGCGTAGCAGCGTACCGTTGTGTGTTTTCAGGTTACCCGGGAGTTTCACAAATAGCGGATATCTACCATAACGTATGACCTTGGAGGGCGTTCGAAAGATCTCTACCATACTTTAGCGATAACTCGCAGGCTAAGGTGTATTGCTCCATCTTTAACGGGGTCGTATGAGTACGCGGAAATCTTGGAAAATCGGCGTCTGCTAAAGTCGCGATTACGCCCACAACTGATGAAACCAGACGAAACAAGGGTACCAGAACTACGTCGGGAACGTTTAGCTAATCTAAGCCCGGTCTGTCTCGACAAAGTTCATTTGTGGGTACGCAAATCCGGTCGTGTGTAAAGCCTGGGCTTTGCAAGAGTCCACAGAAGCATTTCCCATTTCCACGGAGGTGTTTACACCTAAACGTACCAGGAATCAACTGCTGGCACCGAGTCGACCTGTTTCTGAACTGTTCTACCGTCGGGAGAGCGAACGTGGTGGTCTCCTCGTACATTCACTCACCGTTATGGTCATAGTGAGCTAGCTCATAGCATAGGCCCCAGGTCACTG"

#Function to calculuate the hamming score between two strings
def hamming(s,t):
    hamming_count = 0
    length = len(s)
    #Add one to counter for every nucleotide that is the same between strings
    for nucleotide in range(len(s)):
        if s[nucleotide] != t[nucleotide]:
            hamming_count += 1
        else:
            hamming_count += 0
            
    return hamming_count

hamming(s,t)




